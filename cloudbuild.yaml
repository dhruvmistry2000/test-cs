substitutions:
  _IMAGE_NAME: 'dhruv-mistry-test'
  _CD_BRANCH: 'main'
  _GITHUB_USER: 'dhruvmistry2000'
  _GITHUB_USER_EMAIL: 'dhruvmistry2000@gmail.com'

steps:
  - name: 'gcr.io/cloud-builders/git'
    id: 'check-diff'
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        echo "Checking changed files..."
        git fetch origin $BRANCH_NAME
        CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)

        echo "Changed files:"
        echo "$CHANGED_FILES"

        if echo "$CHANGED_FILES" | grep -qv "^kube/deployment.yaml$"; then
          echo "Other files changed — continuing build."
        else
          echo "Only kube/deployment.yaml changed — exiting early."
          exit 0
        fi

  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    waitFor: ['check-diff']
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA'
      - '.'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'tag-for-latest'
    waitFor: ['build-image']
    args:
      - 'tag'
      - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA'
      - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-tag'
    waitFor: ['tag-for-latest']
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-latest'
    waitFor: ['push-tag']
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest'

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        # GIT_ACCESS_TOKEN="${_GIT_ACCESS_TOKEN}"
        git clone https://${_GITHUB_USER}:${_GIT_ACCESS_TOKEN}@github.com/${_GITHUB_USER}/test-cs -b ${_CD_BRANCH}
        echo "Updating image tag version ..."
        cd test-cs
        # sed "s/GOOGLE_CLOUD_PROJECT/$PROJECT_ID/g" deployment.yaml.tpl | \
        # sed "s/COMMIT_SHA/${SHORT_SHA}/g" > deployment.yaml
        sed -i "s|\(^[[:space:]]*image: gcr.io/$PROJECT_ID/${_IMAGE_NAME}:\)[^[:space:]]*|\1$SHORT_SHA|" kube/deployment.yaml
        echo "Pushing updated deployment.yaml to GitHub..."
        git config --global user.name "${_GITHUB_USER}"
        git config --global user.email "${_GITHUB_USER_EMAIL}"
        git add .
        git commit -m "[Cloud Build] Updated image tag to $SHORT_SHA"
        git push https://${_GITHUB_USER}:${_GIT_ACCESS_TOKEN}@github.com/${_GITHUB_USER}/test-cs ${_CD_BRANCH}

# availableSecrets:
#   secretManager:
#     - versionName: projects/$PROJECT_NUMBER/secrets/github-access-token/versions/latest
#       env: 'GIT_ACCESS_TOKEN'

images:
  - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest'

options:
  logging: CLOUD_LOGGING_ONLY